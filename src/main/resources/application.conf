outputDir = "output"

files {
  trainingPath = "/Users/enrique/Downloads/qangaroo_v1.1/wikihop/train.json"
  testingPath = "/Users/enrique/Downloads/qangaroo_v1.1/wikihop/dev.json"
  annotationsFile = ${outputDir}/annotations_openie.txt
  openIEAnnotationsFile = ${outputDir}/openie_annotations.ser_deleteme
  entityListFile = ${outputDir}/entities2.tsv
  graphvizDir = ${outputDir}/graphviz
  benchmarkOutput = ${outputDir}/benchmark_deps.json
}

pathFinder{
  knowledgeGraphType = "OpenIE" #NamedEntityLink, Cooccurrence, OpenIE
  outputFile = ${outputDir}/openie_results.ser
}

lucene {
  directoryIndex = "WikiHopLuceneIndex"
}

embeddings {
  dimensions = 200
  model = skipgram #skipgram, cbow
  binaryMatrix = false #true in case you want to store the matrix as a binary file
  binaryPath = "./word2vec" # Path to the word2vec executable binary
  threads = 12
  embeddingsFile = ${outputDir}/wikihop_vectors.txt
}

environment {
  knowledgeGraphType = Coocurrence #Coocurrence, OpenIE, NamedEntityLink
  restrictToLocalDocs = true
  successReward = 10
  failureReward = -10
}

benchmark {
  agentType = Random #Random, Cascade
}